
package gui.reception;

import DataBase.ConnectionTimeOutException;
import DataBase.DBOperations;
import DataBase.Help;
import Domain.Patient;
import Domain.Room;
import java.sql.Date;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * @author Irfad Hussain
 */
public class AdmitDischargeForm extends javax.swing.JFrame {

    //This frame is shown for both admit and discharge with slight modifications
    
    private ReceptionGUI parent;
    private boolean admit;
    
    /**
     * Creates new form AdmitDischargeForm
     */
    public AdmitDischargeForm() {
        initComponents();
    }

    public AdmitDischargeForm(ReceptionGUI parent){
        // constructor for admit patient
        this();
        this.parent = parent;
        this.admit = true;
        this.setTitle("Admit Patient");
        btnAdmitDisharge.setText("Confirm");
        // load today's date
        Date d = new Date(System.currentTimeMillis());
        txtAdmitYear.setText(Integer.toString(Help.getYear(d)));
        txtAdmitMonth.setText(Integer.toString(Help.getMonth(d)));
        txtAdmitDay.setText(Integer.toString(Help.getDay(d)));
        txtDischargeYear.setVisible(false);
        txtDischargeMonth.setVisible(false);
        txtDischargeDay.setVisible(false);
        lblDischargeDate.setVisible(false);
        lblDischargeY.setVisible(false);
        lblDischargeM.setVisible(false);
        lblDischargeD.setVisible(false);
    }
    
    public AdmitDischargeForm(ReceptionGUI parent,Room room,String name){
        // constructor discharge patient. all details are provided. set them to apropriate fields
        this();
        this.parent = parent;
        this.admit = false;
        this.setTitle("Discharge Patient");
        btnAdmitDisharge.setText("Discharge Patient");
        disableFields();
        txtRoomNumber.setText(Integer.toString(room.getRoomNo()));
        txtPID.setText(Integer.toString(room.getPID()));
        txtPatientName.setText(name);
        txtAdmitYear.setText(Integer.toString(Help.getYear(room.getDate())));
        txtAdmitMonth.setText(Integer.toString(Help.getMonth(room.getDate())));
        txtAdmitDay.setText(Integer.toString(Help.getDay(room.getDate())));
        btnAdmitDisharge.requestFocus();
        Date d = new Date(System.currentTimeMillis());
        txtDischargeYear.setText(Integer.toString(Help.getYear(d)));
        txtDischargeMonth.setText(Integer.toString(Help.getMonth(d)));
        txtDischargeDay.setText(Integer.toString(Help.getDay(d)));
    }
    
    private void disableFields(){
        txtRoomNumber.setEditable(false);
        txtPID.setEditable(false);
        txtAdmitYear.setEditable(false);
        txtAdmitMonth.setEditable(false);
        txtAdmitDay.setEditable(false);
        txtDischargeYear.setEditable(false);
        txtDischargeMonth.setEditable(false);
        txtDischargeDay.setEditable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtPID = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtAdmitYear = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtAdmitMonth = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtAdmitDay = new javax.swing.JTextField();
        btnAdmitDisharge = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtRoomNumber = new javax.swing.JTextField();
        txtDischargeDay = new javax.swing.JTextField();
        lblDischargeD = new javax.swing.JLabel();
        txtDischargeMonth = new javax.swing.JTextField();
        lblDischargeM = new javax.swing.JLabel();
        txtDischargeYear = new javax.swing.JTextField();
        lblDischargeY = new javax.swing.JLabel();
        lblDischargeDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Patient ID :");

        lblPatientName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientName.setText("Patient Name :");

        lblDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDate.setText("Admit Date :");

        txtPID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPatientName.setEditable(false);
        txtPatientName.setBackground(new java.awt.Color(204, 204, 204));
        txtPatientName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("YYYY");

        txtAdmitYear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("MM");

        txtAdmitMonth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("DD");

        txtAdmitDay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnAdmitDisharge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAdmitDisharge.setText("Admit Patinet");
        btnAdmitDisharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdmitDishargeActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Room Number :");

        txtRoomNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDischargeDay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblDischargeD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDischargeD.setText("DD");

        txtDischargeMonth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblDischargeM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDischargeM.setText("MM");

        txtDischargeYear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblDischargeY.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDischargeY.setText("YYYY");

        lblDischargeDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDischargeDate.setText("Discharge Date :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdmitDisharge, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(lblDate))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientName)))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAdmitYear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAdmitMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAdmitDay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtRoomNumber, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDischargeDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDischargeY)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDischargeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDischargeM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDischargeMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDischargeD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDischargeDay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate)
                    .addComponent(txtAdmitYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(txtAdmitMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAdmitDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDischargeDate)
                    .addComponent(txtDischargeYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDischargeY)
                    .addComponent(lblDischargeM)
                    .addComponent(txtDischargeMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDischargeDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDischargeD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdmitDisharge, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdmitDishargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdmitDishargeActionPerformed
        // this button is used to perform 3 actions. when admitting first to confirm and then to admit, when discharging.
        if (admit) {   
            if (btnAdmitDisharge.getText().equals("Confirm")){
                // when conforming check validity of details and load patient name (confirm action)
                try{
                    int PID = Integer.parseInt(txtPID.getText());
                    if (DBOperations.getInstace().isRoomAvailable(Integer.parseInt(txtRoomNumber.getText())) && !parent.isPatientAdmitted(PID)){  // check room availability and patient referref by PID already admitted 
                        Patient p = DBOperations.getInstace().getPatient(PID);
                        txtPatientName.setText(p.getFullName());
                        disableFields();
                        btnAdmitDisharge.setText("Admit Patient");
                        return;
                    }else{
                        throw new NumberFormatException();  // throw exception to display error messege
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Sorry an error occured while checking room or patient ID", "Error", JOptionPane.ERROR_MESSAGE);
                } catch (ConnectionTimeOutException ex) {
                    JOptionPane.showMessageDialog(this, "Cannot check room or patient ID. Connection Timed out. Please try again.", "Time out", JOptionPane.WARNING_MESSAGE);
                } catch (NumberFormatException ex){
                    JOptionPane.showMessageDialog(this, "Invalid Room number or Patient ID", "", JOptionPane.WARNING_MESSAGE);
                } catch (NullPointerException ex){
                    JOptionPane.showMessageDialog(this, "Invalid Patient ID", "", JOptionPane.WARNING_MESSAGE);
                }
            }
            if (btnAdmitDisharge.getText().equals("Admit Patient")){
                // update status in database (admit action)
                try {
                    Room r = new Room();
                    r.setRoomNo(Integer.parseInt(txtRoomNumber.getText()));
                    r.setPID(Integer.parseInt(txtPID.getText()));
                    r.setDate(Help.getDate(Integer.parseInt(txtAdmitYear.getText()), Integer.parseInt(txtAdmitMonth.getText()), Integer.parseInt(txtAdmitDay.getText())));
                    DBOperations.getInstace().updateRoom(r);
                    JOptionPane.showMessageDialog(this, "Successfully admitted", "Success", JOptionPane.INFORMATION_MESSAGE);
                    btnCancelActionPerformed(null);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Sorry an error occured while updating", "Error", JOptionPane.ERROR_MESSAGE);
                } catch (ConnectionTimeOutException ex) {
                    JOptionPane.showMessageDialog(this, "Cannot update room. Connection Timed out. Please try again.", "Time out", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else if (JOptionPane.showConfirmDialog(this, "Are you sure you want to discharge?","Confirm Action",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            // discharge action
            try {
                DBOperations.getInstace().setRoomAvailability(Integer.parseInt(txtRoomNumber.getText()),true);
                JOptionPane.showMessageDialog(this, "Successfully discharged", "Success", JOptionPane.INFORMATION_MESSAGE);
                btnCancelActionPerformed(null);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Sorry an error occured while discharging", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (ConnectionTimeOutException ex) {
                JOptionPane.showMessageDialog(this, "Sorry, Cannot process discharge. Connection Timed out. Please try again.", "Time out", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAdmitDishargeActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        parent.setEnabled(true);
        parent.refreshTable();  // this method is called after admit or discharge.So update room table
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        parent.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdmitDischargeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdmitDischargeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdmitDischargeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdmitDischargeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdmitDischargeForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdmitDisharge;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDischargeD;
    private javax.swing.JLabel lblDischargeDate;
    private javax.swing.JLabel lblDischargeM;
    private javax.swing.JLabel lblDischargeY;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JTextField txtAdmitDay;
    private javax.swing.JTextField txtAdmitMonth;
    private javax.swing.JTextField txtAdmitYear;
    private javax.swing.JTextField txtDischargeDay;
    private javax.swing.JTextField txtDischargeMonth;
    private javax.swing.JTextField txtDischargeYear;
    private javax.swing.JTextField txtPID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtRoomNumber;
    // End of variables declaration//GEN-END:variables
}
